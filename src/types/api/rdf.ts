/**
 * Options for canonizing a RDF dataset.
 */
export interface Canonize {
  /**
   * The canonicalization algorithm to use, defaults to 'RDFC-1.0'.
   */
  algorithm: string

  /**
   * A factory function for creating a `MessageDigest` interface that overrides the built-in message digest
   * implementation used by the canonize algorithm.
   *
   * Note that using a hash (or HMAC) algorithm that differs from the one specified by the canonicalization algorithm
   * will result in different output.
   */
  createMessageDigest?: unknown
  // TODO: This is a function, but we don't know the signature.

  /**
   * The message digest algorithm used by the default implementation of `createMessageDigest`, defaults to 'sha256'.
   *
   * Supported algorithms are "sha256", "sha384", "sha512", and the "SHA###" and "SHA-###" variations.
   */
  messageDigestAlgorithm?: string

  /**
   * An optional map to be populated by the canonical identifier issuer with the bnode identifier mapping generated by
   * the canonicalization algorithm.
   */
  canonicalIdMap?: Map<string, string>

  /**
   * The format of the input. Use `application/n-quads` for a N-Quads string that will be parsed. Omit or falsy for a
   * JSON dataset.
   */
  inputFormat?: string

  /**
   * The format of the output. Omit or use `application/n-quads` for a N-Quads string.
   */
  format?: string

  /**
   * Use native implementation. Defaults to `false`.
   */
  useNative?: boolean

  /**
   * Control of the maximum number of times to run deep comparison algorithm (such as the N-Degree Hash Quads algorithm
   * used in RDFC-1.0) before bailing out and throwing an error.
   *
   * This is a useful setting for preventing wasted CPU cycles or DoS attacks when canonizing meaningless or potentially
   * malicious datasets. This parameter sets the maximum number of iterations based on the number of non-unique blank
   * nodes.
   *
   * - `0` to disable iterations,
   * - `1` for a O(n) limit,
   * - `2` for a O(n^2) limit,
   * - `3` and higher may handle "poison" graphs but may take significant computational resources, and
   * - `Infinity` for no limitation.
   *
   * Defaults to `1` which can handle many common input cases.
   */
  maxWorkFactor?: number

  /**
   * The maximum number of times to run deep comparison algorithms (such as the N-Degree Hash Quads algorithm used in
   * RDFC-1.0) before bailing out and throwing an error.
   *
   * This is a useful setting for preventing wasted CPU cycles or DoS attacks when canonizing meaningless or potentially
   * malicious datasets.
   *
   * If set to a value other than `-1`, it will explicitly set the number of iterations and override `maxWorkFactor`. It
   * is recommended to use `maxWorkFactor` instead of this option.
   */
  maxDeepIterations?: number

  /**
   * An abort signal to abort the operation. The aborted status is only periodically checked for performance reasons.
   */
  signal?: AbortSignal

  /**
   * Reject the "URDNA2015" algorithm name instead of treating it as an alias for "RDFC-1.0".
   */
  rejectURDNA2015?: boolean
}
